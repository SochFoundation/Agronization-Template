
@mixin maxbreakpoint($class) {
  @if $class == xs {
    @media (max-width: 767px) { @content; }
  }
 
  @else if $class == sm {
    @media (min-width: 768px) { @content; }
  }
 
  @else if $class == md {
    @media (min-width: 992px) { @content; }
  }
 
  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }
 
  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

@mixin minbreakpoint($class) {
  @if $class == xs {
    @media (min-width: 767px) { @content; }
  }
 
  @else if $class == sm {
    @media (max-width: 768px) { @content; }
  }
 
  @else if $class == md {
    @media (max-width: 992px) { @content; }
  }
 
  @else if $class == lg {
    @media (max-width: 1200px) { @content; }
  }
 
  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}
@mixin vCenter() {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
          box-shadow: $shadow;
}

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}


@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@mixin card($depth) {
  @if $depth < 0 {
     @include box-shadow(none);
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    @include box-shadow(bottom-shadow($depth), top-shadow($depth) );  
  }
  @include box-shadow(bottom-shadow($depth), top-shadow($depth) );
}

// Heading

@mixin lspace($type){
  @if $type == 1 {
    letter-spacing: 0.120em;
  } @else if $type == 2 {
    letter-spacing: 0.190em;
  }
}

@mixin fweight($type){
  @if $type == 1 {
    font-weight: 300;
  } @else if $type == 2 {
    font-weight: 600;
  }
}